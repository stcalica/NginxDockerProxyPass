
#user  nobody;
#Defines which Linux system user will own and run the Nginx server

worker_processes  1;
#Referes to single threaded process. Generally set to be equal to the number of CPUs or cores.

#error_log  logs/error.log; #error_log  logs/error.log  notice;
#Specifies the file where server logs. 

#pid        logs/nginx.pid;
#nginx will write its master process ID(PID).

events {
    worker_connections  1024;
    # worker_processes and worker_connections allows you to calculate maxclients value: 
    # max_clients = worker_processes * worker_connections
}


http {
    include       mime.types;
    # anything written in /opt/nginx/conf/mime.types is interpreted as if written inside the http { } block

    default_type  application/octet-stream;

    sendfile        on;

    keepalive_timeout  65;
    
    server{
	listen 80;
	server_name server1.com;

	location / {
	#104.131.142.163
	  proxy_pass http://104.131.142.163:8081;
	}

   }
   server{

	listen 80; 
	server_name test.edgeofrevolt.com;
	location / {
		proxy_pass http://104.131.142.163:8066;
	}


   }
   server{
	listen 80;
	server_name pussyfreakshow.com;
	
	location / {
		proxy_pass http://104.131.142.163:8005; 
	}


   }
   server{
	
	listen 80;
	server_name fluff.link;

	location / {
		
	  proxy_pass http://104.131.142.163:9090;

	}
   }

   server {
	
	listen 80;
	server_name crypto.edgeofrevolt.com;

	location / {
		
	  proxy_pass http://104.131.142.163:8000;

	}
   }
   
   server{
	
	listen 80;
	server_name raveinstant.com;

	location / {
		
	  proxy_pass http://104.131.142.163:3000;
	}

    }

   server{
	
	listen 80;
	server_name edgeofrevolt.com;

	location / {
		
	  proxy_pass http://104.131.142.163:8085;

	}
   }

   server{
	
	listen 80;
	server_name teamprint.edgeofrevolt.com;
	
	location / {
		proxy_pass http://104.131.142.163:5000;
	}

   }

   server{
	
	listen 80;
	server_name galileogear.com;

	location / {
		
	  proxy_pass http://104.131.142.163:3103;
	}
    }
	
   server{

	listen 80;
	server_name test.pussyfreakshow.com;
	client_max_body_size 2M;
	location / {
	  proxy_pass http://104.131.142.163:8185;
	}	
   }
}

   # server {
        # You would want to make a separate file with its own server block for each virtual domain
        # on your server and then include them.
    #    listen       80;
        #tells Nginx the hostname and the TCP port where it should listen for HTTP connections.
        # listen 80; is equivalent to listen *:80;
        
     #   server_name  localhost;
        # lets you doname-based virtual hosting

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

 #       location / {
            #The location setting lets you configure how nginx responds to requests for resources within the server.
  #          root   html;
   #         index  index.html index.htm;
    #    }

   # }

#    include /etc/nginx/sites-enabled/*;

